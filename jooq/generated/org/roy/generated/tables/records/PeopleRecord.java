/**
 * This class is generated by jOOQ
 */
package org.roy.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;
import org.roy.generated.tables.People;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PeopleRecord extends TableRecordImpl<PeopleRecord> implements Record4<Integer, String, String, Timestamp> {

	private static final long serialVersionUID = -1331125691;

	/**
	 * Setter for <code>public.people.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.people.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.people.firstname</code>.
	 */
	public void setFirstname(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.people.firstname</code>.
	 */
	public String getFirstname() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.people.lastname</code>.
	 */
	public void setLastname(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.people.lastname</code>.
	 */
	public String getLastname() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.people.tstamp</code>.
	 */
	public void setTstamp(Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.people.tstamp</code>.
	 */
	public Timestamp getTstamp() {
		return (Timestamp) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Timestamp> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Timestamp> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return People.PEOPLE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return People.PEOPLE.FIRSTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return People.PEOPLE.LASTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return People.PEOPLE.TSTAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getFirstname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getLastname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getTstamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PeopleRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PeopleRecord value2(String value) {
		setFirstname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PeopleRecord value3(String value) {
		setLastname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PeopleRecord value4(Timestamp value) {
		setTstamp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PeopleRecord values(Integer value1, String value2, String value3, Timestamp value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PeopleRecord
	 */
	public PeopleRecord() {
		super(People.PEOPLE);
	}

	/**
	 * Create a detached, initialised PeopleRecord
	 */
	public PeopleRecord(Integer id, String firstname, String lastname, Timestamp tstamp) {
		super(People.PEOPLE);

		setValue(0, id);
		setValue(1, firstname);
		setValue(2, lastname);
		setValue(3, tstamp);
	}
}
