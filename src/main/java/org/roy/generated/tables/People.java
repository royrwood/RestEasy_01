/**
 * This class is generated by jOOQ
 */
package org.roy.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.roy.generated.Keys;
import org.roy.generated.Public;
import org.roy.generated.tables.records.PeopleRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class People extends TableImpl<PeopleRecord> {

	private static final long serialVersionUID = -39679109;

	/**
	 * The reference instance of <code>public.people</code>
	 */
	public static final People PEOPLE = new People();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PeopleRecord> getRecordType() {
		return PeopleRecord.class;
	}

	/**
	 * The column <code>public.people.id</code>.
	 */
	public final TableField<PeopleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.people.firstname</code>.
	 */
	public final TableField<PeopleRecord, String> FIRSTNAME = createField("firstname", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.people.lastname</code>.
	 */
	public final TableField<PeopleRecord, String> LASTNAME = createField("lastname", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.people.tstamp</code>.
	 */
	public final TableField<PeopleRecord, Timestamp> TSTAMP = createField("tstamp", org.jooq.impl.SQLDataType.TIMESTAMP.defaulted(true), this, "");

	/**
	 * Create a <code>public.people</code> table reference
	 */
	public People() {
		this("people", null);
	}

	/**
	 * Create an aliased <code>public.people</code> table reference
	 */
	public People(String alias) {
		this(alias, PEOPLE);
	}

	private People(String alias, Table<PeopleRecord> aliased) {
		this(alias, aliased, null);
	}

	private People(String alias, Table<PeopleRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PeopleRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PEOPLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PeopleRecord> getPrimaryKey() {
		return Keys.PEOPLE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PeopleRecord>> getKeys() {
		return Arrays.<UniqueKey<PeopleRecord>>asList(Keys.PEOPLE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public People as(String alias) {
		return new People(alias, this);
	}

	/**
	 * Rename this table
	 */
	public People rename(String name) {
		return new People(name, null);
	}
}
